
@{
    ViewBag.Title = "Index";
}
@section head{
    <link href="~/Content/bootstrapValidator.css" rel="stylesheet" />
}
<div class="page-header">
    <div class="page-header-content">
        <div class="page-title">
            <h5>
                <i class="icon-arrow-left52 position-left"></i>
                <span class="text-semibold">Doctor</span>
                <small>Admin Panel</small>
            </h5>
            <a class="heading-elements-toggle"><i class="icon-more"></i></a>
        </div>
    </div>


    @Html.Partial("_searchToolbar")

    <div class="container-fluid">

        <div class="content" id="ListResult" style="width:100%">
            <h3>Loading...</h3>
        </div>
    </div>
</div>
<div id="editForm"></div>
<div id="editquali"></div>

@Html.Partial("_create")
@Html.Partial("~/Views/Qualification/_CreateQuali.cshtml")

@section scripts
{
    <script src="~/Scripts/moment.min.js"></script>
    <script src="~/Scripts/bootstrap-datepicker.js"></script>
    <script src="~/Scripts/sweetalert.min.js"></script>
    <script src="~/Scripts/bootstrapValidator.js"></script>
    <script src="~/Scripts/CRUD.js"></script>

    @*@Scripts.Render("~/bundles/validation")*@

    <script>
        $(function () {
            //ShowList();
            LIST('@Url.Action("List", "Doctor")', '#ListResult');
            var toolbar = new searchToolbar("@Url.Action("List")", 'ListResult', 'lblStatus');
            toolbar.initialize();
            $('.modal').on('hidden.bs.modal', function () {
                $(this).find('input[type="text"],input[type="email"],textarea,select').val('');
                $(this).removeData('bs.modal');
                $('#contactForm').bootstrapValidator('resetForm', true);
            });
            attachValidator("createForm", "modal_createForm", 0, "create");
        })

        function Addnewdoctor() {
            $('#modal_createForm').modal('show');
            $('.datepicker').datepicker({
                formet: 'mm/dd/yyyy'
            });
            bindState("create");
            bindperState("create");
        }

        function attachValidator(form, modal, id, action) {
            console.log(form + modal);
            var $form = $('#' + form);
            var $modal = $('#' + modal);
            $form.bootstrapValidator({
                message: 'This value is not valid',
                feedbackIcons: {
                    valid: 'icon-checkmark-circle',
                    invalid: 'icon-exclamation',
                    validating: 'glyphicon glyphicon-refresh'
                },
                excluded: ':disabled',
                fields: {
                    Name: {
                        message: 'Name is not valid.',
                        validators: {
                            notEmpty: {
                                message: 'Doctor name is required and cannot be empty.'
                            }
                        }
                    }
                }
            }).on('success.form.bv', function (e) {
                alert(action)
                e.preventDefault();
                var $form = $(e.target);
                $.ajax(
                {
                    cache: false,
                    async: true,
                    type: "POST",
                    url: $form.attr('action'),
                    data: $form.serialize(),
                    beforeSend: function () {
                        alert("be");
                    },
                    success: function (myData) {
                        alert(myData);
                        if (myData != "Error!") {
                            $modal.modal('hide');
                            console.log("edit");
                            if (action == "edit") {
                                alert("eit");
                                $info = $('#panel_' + id);
                                $info.replaceWith(myData);
                            }
                            else {
                                window.location.href = myData;
                            }
                        }
                    },
                    error: function (e) {

                    },
                    complete: function () {

                    }
                });
            });
        }

        function bindState(type) {
            $.ajax({
                cache: false,
                url: '@Url.Action("GetStates", "Home")',
                beforeSend: function () {

                },
                success: function (result) {
                    if (result != null) {
                        $('#states').empty();
                        $('#states').append($('<option value=""> -- Select -- </option>'));
                        for (i = 0; i < result.length; i++) {
                            $('#states').append($('<option value="' + result[i] + '">' + result[i] + '</option>>'));
                        }
                    }
                    $('#states').on('change', function () {
                        bindTownship($(this).val());
                    });
                    if (type == "edit") {
                        $('#states').val($('#statehidden').val());
                    }
                },
                complete: function () {
                    if (type == "edit") {
                        bindTownship($('#statehidden').val());
                    }
                }
            });
        }

        function bindTownship(selectstate) {
            $.ajax({
                cache: false,
                url: '@Url.Action("GetTownships", "Home")',
                data: { selectedState: selectstate },
                beforeSend: function () {

                },
                success: function (result) {
                    if (result != null) {
                        $('#townships').empty();
                        $('#townships').append($('<option value=""> -- Select -- </option>'));
                        for (i = 0; i < result.length; i++) {
                            $('#townships').append($('<option value="' + result[i] + '">' + result[i] + '</option>>'));
                        }

                        var township = $('#townhidden').val();
                        if (township != null && township != "") {
                            $('#townships').val(township);
                        }
                    }
                },
                complete: function () {
                }
            });
        }

        function bindperState(type) {
            $.ajax({
                cache: false,
                url: '@Url.Action("GetStates", "Home")',
                beforeSend: function () {

                },
                success: function (result) {
                    if (result != null) {
                        $('#perstates').empty();
                        $('#perstates').append($('<option value=""> -- Select -- </option>'));
                        for (i = 0; i < result.length; i++) {
                            $('#perstates').append($('<option value="' + result[i] + '">' + result[i] + '</option>>'));
                        }
                    }
                    $('#perstates').on('change', function () {
                        bindperTownship($(this).val());
                    });
                    if (type == "edit") {
                        $('#perstates').val($('#perstatehidden').val());
                    }
                },
                complete: function () {
                    if (type == "edit") {
                        bindperTownship($('#perstatehidden').val());
                    }
                }
            });
        }

        function bindperTownship(selectstate) {
            $.ajax({
                cache: false,
                url: '@Url.Action("GetTownships", "Home")',
                data: { selectedState: selectstate },
                beforeSend: function () {

                },
                success: function (result) {
                    if (result != null) {
                        $('#pertownships').empty();
                        $('#pertownships').append($('<option value=""> -- Select -- </option>'));
                        for (i = 0; i < result.length; i++) {
                            $('#pertownships').append($('<option value="' + result[i] + '">' + result[i] + '</option>>'));
                        }

                        var township = $('#pertownhidden').val();
                        if (township != null && township != "") {
                            $('#pertownships').val(township);
                        }
                    }
                },
                complete: function () {
                }
            });
        }

        function addquali(e) {
            var id = $(e).attr('data-id');
            var name = $(e).attr('data-name');
            $('#modal_createQualiRegForm').modal('show');
            $('#doctorid').val(id);
            $('#doctorname').val(name);
        }

        function showEditForm(id) {
            $.ajax(
            {
                url: '@Url.Action("Edit", "Doctor")',
                data: { id: id },
                beforeSend: function () {
                    $('#editForm').empty();
                },
                success: function (data) {
                    $('#editForm').empty().html(data);
                },
                complete: function () {
                    attachValidator("editForm", "modal_editForm", id, "edit");
                    $('#modal_editForm').modal('show');
                    $('.datepicker').datepicker({
                        formet: 'mm/dd/yyyy'
                    });
                    bindState("edit");
                    bindperState("edit");
                }
            })
        }

        @*function showEditForm(id) {
            EDIT(id, '@Url.Action("Edit", "Doctor")', $('#editForm'));
        }*@

        function deleteEntity(id) {
            $.ajax(
           {
               url: '@Url.Action("delete", "Doctor")',
               data: { id: id },
               beforeSend: function () {

               },
               success: function (data) {
                   $('#panel_' + id).empty();
               }
           })
        }

        function qualifordoc(e) {
            var id = $(e).attr('data-id');
            $.ajax(
            {
                url: '@Url.Action("_qualifordoctor", "Doctor")',
                data: { doctorid: id },
                beforeSend: function () {
                    $('#qualifordoctor').empty().html("<h3>Loading...</h3>");
                },
                success: function (data) {
                    $('#qualifordoctor').empty().html(data);
                },
                complete: function () {

                }
            })
        }

        function editquali(e) {
            var qualiid = $(e).attr('data-id');
            $.ajax(
            {
                url: '@Url.Action("Edit", "Qualification")',
                data: { id: qualiid },
                beforeSend: function () {
                    $('#editquali').empty();
                },
                success: function (data) {
                    $('#editquali').empty().html(data);
                },
                complete: function () {
                    //attachValidator("editDoctorRegForm", "modal_editDoctorRegForm");
                    $('#modal_editQualiRegForm').modal('show');
                }
            })
        }

        function deletequali(e) {
            var qualiid = $(e).attr('data-id');
            $.ajax(
            {
                url: '@Url.Action("deleteQ", "Qualification")',
                data: { id: qualiid },
                beforeSend: function () {
                    //$('#qualifordoctor').empty().html("<h3>Loading...</h3>");
                    //$('#qualifordoctor').toggle();
                },
                success: function (data) {
                    if (data == "Success") {
                        alert("success");
                        $('#item-' + qualiid).empty();
                    }
                },
                complete: function () {
                    //attachValidator("editDoctorRegForm", "modal_editDoctorRegForm");
                    $('#modal_editQualiRegForm').modal('show');
                }
            })
        }

    </script>
}
